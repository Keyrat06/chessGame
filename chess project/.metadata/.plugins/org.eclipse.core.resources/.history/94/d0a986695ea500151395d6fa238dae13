package board;

import java.util.ArrayList;

public class Helper {
	public static ArrayList<Integer> xKnight = new ArrayList<Integer>(
			1,
			2,
			2,
			1,
			-1,
			-2,
			-2,
			-1
			);
	
	public static ArrayList<Integer> yKnight = new ArrayList<>(
			
			);
	
	
	/**
	 * @return a standard Chess Starting Board
	 */
	public static Piece[][] standardBoard(){
		Piece[][] standardBoard = new Piece[8][8];
		//Adding Castles
		standardBoard[0][0] = Piece.White_Castle;
		standardBoard[0][7] = Piece.White_Castle;
		standardBoard[7][0] = Piece.Black_Castle;
		standardBoard[7][7] = Piece.Black_Castle;
		//Adding Knights
		standardBoard[0][1] = Piece.White_Knight;
		standardBoard[0][6] = Piece.White_Knight;
		standardBoard[7][1] = Piece.Black_Knight;
		standardBoard[7][6] = Piece.Black_Knight;
		//Adding Bishops
		standardBoard[0][2] = Piece.White_Bishop;
		standardBoard[0][5] = Piece.White_Bishop;
		standardBoard[7][2] = Piece.Black_Bishop;
		standardBoard[7][5] = Piece.Black_Bishop;
		//Adding Queens
		standardBoard[0][3] = Piece.White_Queen;
		standardBoard[7][4] = Piece.Black_Queen;
		//Adding Kings
		standardBoard[0][4] = Piece.White_King;
		standardBoard[7][3] = Piece.Black_King;
		//Adding Ponds
		for(int i = 0; i < 8; i++){
			standardBoard[1][i] = Piece.White_Pond;
			standardBoard[6][i] = Piece.Black_Pond;
		}
		return standardBoard;
	}
	
	public static boolean isWhitePiece(Piece piece){
		if(piece.equals(Piece.White_Pond) ||
				piece.equals(Piece.White_Castle) ||
				piece.equals(Piece.White_Knight) ||
				piece.equals(Piece.White_Bishop) ||
				piece.equals(Piece.White_Queen) ||
				piece.equals(Piece.White_King)){
			return true;
		}
		return false;
	}
	
	public static boolean sameColor(Piece piece1,Piece piece2){
		return isWhitePiece(piece1) == isWhitePiece(piece2); 
	}

}
